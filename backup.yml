version: '3.0'

services:
  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - ./minio:/data
    ports:
      - "8000:9000"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always

  portainer_agent:
    image: portainer/agent
    container_name: agent
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
    
# To create bucket/user
# --------------------
# mc config host add mycloud [url]
# mc ls mycloud                    
# mc mb mycloud/guest
# vi user.json
# mc admin policy add mycloud user user.json
# mc admin policy info mycloud user
# mc admin user add mycloud guest [password]
# mc admin policy set mycloud user user=guest
# mc admin user list mycloud --json

# user.json
# {
#   "Version": "2012-10-17",
#   "Statement": [
#     {
#       "Action": [
#         "s3:PutBucketPolicy",
#         "s3:GetBucketPolicy",
#         "s3:DeleteBucketPolicy",
#         "s3:ListAllMyBuckets",
#         "s3:ListBucket"
#       ],
#       "Effect": "Allow",
#       "Resource": [
#         "arn:aws:s3:::guest"
#       ],
#       "Sid": ""
#     },
#     {
#       "Action": [
#         "s3:AbortMultipartUpload",
#         "s3:DeleteObject",
#         "s3:GetObject",
#         "s3:ListMultipartUploadParts",
#         "s3:PutObject"
#       ],
#       "Effect": "Allow",
#       "Resource": [
#         "arn:aws:s3:::guest/*"
#       ],
#       "Sid": ""
#     }
#   ]
# }




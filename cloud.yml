# 102

version: '3'
services:

  smokeping:
    image: linuxserver/smokeping
    container_name: smokeping
    volumes:
      - ${VOLUME_ROOT}/smokeping/config:/config
      - ${VOLUME_ROOT}/smokeping/data:/data
    ports:
      - "8001:80"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    restart: always

  ghostfolio:
    image: ghostfolio/ghostfolio:latest
    container_name: ghostfolio
    environment:
      - NODE_ENV=production
      - ACCESS_TOKEN_SALT=${GF_ACCESS}
      - JWT_SECRET_KEY=${GF_KEY}
      - REDIS_HOST=ghostfolio-redis
      - REDIS_PASSWORD=${GF_REDIS_PASSWORD}
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://${GF_PG_USER}:${GF_PG_PASSWORD}@ghostfolio-db:5432/${GF_PG_DB}?sslmode=prefer
    ports:
      - 8006:3333
    depends_on:
      - ghostfolio-db
      - ghostfolio-redis
    restart: always

  ghostfolio-db:
    image: postgres:12
    container_name: ghostfolio_db
    volumes:
      - ${VOLUME_ROOT}/ghostfolio/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${GF_PG_DB}
      POSTGRES_USER: ${GF_PG_USER}
      POSTGRES_PASSWORD: ${GF_PG_PASSWORD}
    restart: always

  ghostfolio-redis:
    image: 'redis:alpine'
    container_name: ghostfolio_redis
    environment:
      REDIS_HOST: 'redis_gf'
      REDIS_PASSWORD: ${GF_REDIS_PASSWORD}
    volumes:
      - ${VOLUME_ROOT}/ghostfolio/redis:/data
    restart: always

  bitwarden:
    image: vaultwarden/server
    container_name: bitwarden
    volumes:
      - ${VOLUME_ROOT}/bitwarden:/data
    ports:
      - "8005:80"
    environment:
      WEBSOCKET_ENABLED: 'true' # Required to use websockets
      SIGNUPS_ALLOWED: 'false'   # set to false to disable signups
    restart: always

  immich:
    container_name: immich
    image: altran1502/immich-proxy:release
    ports:
      - 8007:8080
    depends_on:
      - immich-web
      - immich-server
    restart: always
    networks:
      - immich_network

  immich-server:
    container_name: immich-server
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-server.sh"]
    volumes:
      - ${VOLUME_ROOT}/immich/photos:/usr/src/app/upload
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=immich
      - DB_PASSWORD=${IM_DB_PASSWORD}
      - ENABLE_MAPBOX=false
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich-redis
      - JWT_SECRET=${IM_JWT_SECRET}
    depends_on:
      - immich-redis
      - immich-db
      - immich-typesense
    restart: always
    networks:
      - immich_network

  immich-microservices:
    container_name: immich-microservices
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-microservices.sh"]
    volumes:
      - ${VOLUME_ROOT}/immich/photos:/usr/src/app/upload
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=immich
      - DB_PASSWORD=${IM_DB_PASSWORD}
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich-redis
      - JWT_SECRET=${IM_JWT_SECRET}
      - ENABLE_MAPBOX=false
    depends_on:
      - immich-redis
      - immich-db
      - immich-typesense
    restart: always
    networks:
      - immich_network

  immich-machine-learning:
    container_name: immich-machine-learning
    image: altran1502/immich-machine-learning:release
    command: [ "python", "src/main.py" ]
    volumes:
      - ${VOLUME_ROOT}/immich/photos:/usr/src/app/upload
      - ${VOLUME_ROOT}/immich/cache:/cache
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=immich
      - DB_PASSWORD=${IM_DB_PASSWORD}
      - DB_NAME=immich
      - DB_DATABASE_NAME=immich
    depends_on:
      - immich-db
    restart: always
    networks:
      - immich_network

  immich-web:
    container_name: immich-web
    image: altran1502/immich-web:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    restart: always
    networks:
      - immich_network

  immich-redis:
    container_name: immich-redis
    image: redis:6.2
    restart: always
    networks:
      - immich_network

  immich-db:
    container_name: immich-db
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${IM_DB_PASSWORD}
      POSTGRES_USER: immich
      POSTGRES_DB: immich
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ${VOLUME_ROOT}/immich/db:/var/lib/postgresql/data
    restart: always
    networks:
      - immich_network

  typesense:
    container_name: immich-typesense
    image: typesense/typesense:0.24.0
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
    logging:
      driver: none
    volumes:
      - ${VOLUME_ROOT}/immich/tsdata:/data
    networks:
      - immich_network
    

  # code-server:
  #   image: linuxserver/code-server
  #   container_name: code-server
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=Europe/Paris
  #     - PASSWORD=${CODE_PASSWORD}
  #     - SUDO_PASSWORD=${CODE_SUDO_PASSWORD}
  #     - PROXY_DOMAIN=code.mutualis.com
  #   volumes:
  #     - ${VOLUME_ROOT}/code-server:/config
  #   ports:
  #     - 8002:8443
  #   restart: always

volumes:
  postgres:

networks:
  immich_network:
    


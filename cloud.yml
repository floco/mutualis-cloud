# 102

version: '3'
services:

  smokeping:
    image: linuxserver/smokeping
    container_name: smokeping
    volumes:
      - ${VOLUME_ROOT}/smokeping/config:/config
      - ${VOLUME_ROOT}/smokeping/data:/data
    ports:
      - "8001:80"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    restart: always

  ghostfolio:
    image: ghostfolio/ghostfolio:latest
    environment:
      DATABASE_URL: postgresql://${GF_PG_USER}:${GF_PG_PASSWORD}@postgres_gf:5432/${GF_PG_DB}?sslmode=prefer
      REDIS_HOST: 'redis_gf'
      REDIS_PASSWORD: ${GF_REDIS_PASSWORD}
    ports:
      - 8006:3333
    restart: always

  postgres_gf:
    image: postgres:12
    volumes:
      - ${VOLUME_ROOT}/ghostfolio:/var/lib/postgresql/data
    restart: always

  redis_gf:
    image: 'redis:alpine'
    restart: always

  bitwarden:
    image: vaultwarden/server
    container_name: bitwarden
    volumes:
      - ${VOLUME_ROOT}/bitwarden:/data
    ports:
      - "8005:80"
    environment:
      WEBSOCKET_ENABLED: 'true' # Required to use websockets
      SIGNUPS_ALLOWED: 'false'   # set to false to disable signups
    restart: always

  immich-server:
    container_name: immich_server
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-server.sh"]
    volumes:
      - ${VOLUME_ROOT}/immich/photos:/usr/src/app/upload
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - database
    restart: always

  immich-microservices:
    container_name: immich_microservices
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-microservices.sh"]
    volumes:
      - ${VOLUME_ROOT}/immich/photos:/usr/src/app/upload
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    image: altran1502/immich-machine-learning:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    volumes:
      - ${VOLUME_ROOT}/immich/photos:/usr/src/app/upload
    environment:
      - NODE_ENV=production
    depends_on:
      - database
    restart: always

  immich-web:
    container_name: immich_web
    image: altran1502/immich-web:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    environment:
      # Rename these values for svelte public interface
      - PUBLIC_IMMICH_SERVER_URL=${IMMICH_SERVER_URL}
    restart: always

  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: always

  database:
    container_name: immich_postgres
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${IM_DB_PASSWORD}
      POSTGRES_USER: ${IM_DB_USERNAME}
      POSTGRES_DB: ${IM_DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ${VOLUME_ROOT}/immich/db:/var/lib/postgresql/data
    restart: always

  immich-proxy:
    container_name: immich_proxy
    image: altran1502/immich-proxy:release
    environment:
      # Make sure these values get passed through from the env file
      - IMMICH_SERVER_URL
      - IMMICH_WEB_URL
    ports:
      - 8007:8080
    logging:
      driver: none
    depends_on:
      - immich-server
    restart: always

  # code-server:
  #   image: linuxserver/code-server
  #   container_name: code-server
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=Europe/Paris
  #     - PASSWORD=${CODE_PASSWORD}
  #     - SUDO_PASSWORD=${CODE_SUDO_PASSWORD}
  #     - PROXY_DOMAIN=code.mutualis.com
  #   volumes:
  #     - ${VOLUME_ROOT}/code-server:/config
  #   ports:
  #     - 8002:8443
  #   restart: always

volumes:
  postgres:
    

